<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>alloc_page_buffers (141,414,140 samples, 3.20%)</title><rect x="163.9" y="181" width="37.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="166.91" y="191.5" >all..</text>
</g>
<g >
<title>ext4_dirty_inode (10,101,010 samples, 0.23%)</title><rect x="28.9" y="197" width="2.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="31.90" y="207.5" ></text>
</g>
<g >
<title>blk_finish_plug (111,111,110 samples, 2.52%)</title><rect x="1130.6" y="245" width="29.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1133.59" y="255.5" >bl..</text>
</g>
<g >
<title>folio_batch_move_lru (80,808,080 samples, 1.83%)</title><rect x="431.2" y="149" width="21.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="434.24" y="159.5" >f..</text>
</g>
<g >
<title>__blk_flush_plug (111,111,110 samples, 2.52%)</title><rect x="1130.6" y="229" width="29.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1133.59" y="239.5" >__..</text>
</g>
<g >
<title>__wake_up_common_lock (50,505,050 samples, 1.14%)</title><rect x="666.2" y="149" width="13.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="669.16" y="159.5" ></text>
</g>
<g >
<title>copy_file_range (4,414,141,370 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >copy_file_range</text>
</g>
<g >
<title>filemap_get_pages (1,373,737,360 samples, 31.12%)</title><rect x="820.1" y="293" width="367.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="823.07" y="303.5" >filemap_get_pages</text>
</g>
<g >
<title>__schedule (30,303,030 samples, 0.69%)</title><rect x="836.3" y="229" width="8.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="839.27" y="239.5" ></text>
</g>
<g >
<title>virtio_queue_rq (90,909,090 samples, 2.06%)</title><rect x="1133.3" y="101" width="24.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1136.30" y="111.5" >v..</text>
</g>
<g >
<title>_raw_spin_lock (30,303,030 samples, 0.69%)</title><rect x="155.8" y="181" width="8.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="158.81" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (90,909,090 samples, 2.06%)</title><rect x="982.1" y="229" width="24.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="985.08" y="239.5" >_..</text>
</g>
<g >
<title>folio_alloc (343,434,340 samples, 7.78%)</title><rect x="1038.8" y="261" width="91.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1041.79" y="271.5" >folio_alloc</text>
</g>
<g >
<title>__alloc_pages (333,333,330 samples, 7.55%)</title><rect x="1038.8" y="245" width="89.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1041.79" y="255.5" >__alloc_pa..</text>
</g>
<g >
<title>__es_remove_extent (20,202,020 samples, 0.46%)</title><rect x="228.7" y="165" width="5.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="231.72" y="175.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (10,101,010 samples, 0.23%)</title><rect x="28.9" y="165" width="2.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="31.90" y="175.5" ></text>
</g>
<g >
<title>file_modified_flags (20,202,020 samples, 0.46%)</title><rect x="26.2" y="245" width="5.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="29.20" y="255.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (50,505,050 samples, 1.14%)</title><rect x="776.9" y="133" width="13.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="779.86" y="143.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1,727,272,710 samples, 39.13%)</title><rect x="120.7" y="229" width="461.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="123.71" y="239.5" >ext4_da_write_begin</text>
</g>
<g >
<title>preempt_count_add (20,202,020 samples, 0.46%)</title><rect x="158.5" y="165" width="5.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="161.51" y="175.5" ></text>
</g>
<g >
<title>blk_mq_get_tag (10,101,010 samples, 0.23%)</title><rect x="1173.8" y="181" width="2.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1176.80" y="191.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (90,909,090 samples, 2.06%)</title><rect x="1133.3" y="117" width="24.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1136.30" y="127.5" >b..</text>
</g>
<g >
<title>stop_this_handle (60,606,060 samples, 1.37%)</title><rect x="663.5" y="165" width="16.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="666.46" y="175.5" ></text>
</g>
<g >
<title>xa_load (20,202,020 samples, 0.46%)</title><rect x="1181.9" y="261" width="5.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1184.90" y="271.5" ></text>
</g>
<g >
<title>folio_mapping (30,303,030 samples, 0.69%)</title><rect x="650.0" y="181" width="8.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="652.95" y="191.5" ></text>
</g>
<g >
<title>bio_associate_blkg_from_css (10,101,010 samples, 0.23%)</title><rect x="1163.0" y="197" width="2.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1166.00" y="207.5" ></text>
</g>
<g >
<title>workingset_refault (30,303,030 samples, 0.69%)</title><rect x="1025.3" y="245" width="8.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1028.29" y="255.5" ></text>
</g>
<g >
<title>preempt_count_add (10,101,010 samples, 0.23%)</title><rect x="253.0" y="165" width="2.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="256.02" y="175.5" ></text>
</g>
<g >
<title>release_pages (20,202,020 samples, 0.46%)</title><rect x="447.4" y="133" width="5.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="450.44" y="143.5" ></text>
</g>
<g >
<title>_raw_read_unlock (10,101,010 samples, 0.23%)</title><rect x="247.6" y="165" width="2.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="250.62" y="175.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (414,141,410 samples, 9.38%)</title><rect x="679.7" y="197" width="110.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="682.66" y="207.5" >ext4_dirty_in..</text>
</g>
<g >
<title>pagecache_get_page (1,212,121,200 samples, 27.46%)</title><rect x="258.4" y="213" width="324.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="261.42" y="223.5" >pagecache_get_page</text>
</g>
<g >
<title>direct_splice_actor (2,979,797,950 samples, 67.51%)</title><rect x="10.0" y="325" width="796.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >direct_splice_actor</text>
</g>
<g >
<title>__alloc_pages_slowpath.constprop.0 (10,101,010 samples, 0.23%)</title><rect x="1041.5" y="229" width="2.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1044.49" y="239.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (1,282,828,270 samples, 29.06%)</title><rect x="844.4" y="277" width="342.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="847.37" y="287.5" >page_cache_ra_unbounded</text>
</g>
<g >
<title>wake_all_kswapds (10,101,010 samples, 0.23%)</title><rect x="1041.5" y="213" width="2.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1044.49" y="223.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (10,101,010 samples, 0.23%)</title><rect x="169.3" y="101" width="2.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="172.31" y="111.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (10,101,010 samples, 0.23%)</title><rect x="223.3" y="165" width="2.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="226.32" y="175.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (242,424,240 samples, 5.49%)</title><rect x="309.7" y="149" width="64.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="312.73" y="159.5" >__mem_c..</text>
</g>
<g >
<title>preempt_count_add (10,101,010 samples, 0.23%)</title><rect x="244.9" y="149" width="2.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="247.92" y="159.5" ></text>
</g>
<g >
<title>filemap_read (1,414,141,400 samples, 32.04%)</title><rect x="812.0" y="309" width="378.0" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="814.97" y="319.5" >filemap_read</text>
</g>
<g >
<title>copy_page_from_iter_atomic (232,323,230 samples, 5.26%)</title><rect x="58.6" y="229" width="62.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="61.60" y="239.5" >copy_p..</text>
</g>
<g >
<title>__mark_inode_dirty (10,101,010 samples, 0.23%)</title><rect x="606.8" y="197" width="2.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="609.75" y="207.5" ></text>
</g>
<g >
<title>charge_memcg (151,515,150 samples, 3.43%)</title><rect x="914.6" y="213" width="40.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="917.58" y="223.5" >cha..</text>
</g>
<g >
<title>preempt_count_sub (10,101,010 samples, 0.23%)</title><rect x="236.8" y="149" width="2.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="239.82" y="159.5" ></text>
</g>
<g >
<title>asm_common_interrupt (10,101,010 samples, 0.23%)</title><rect x="1009.1" y="245" width="2.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1012.08" y="255.5" ></text>
</g>
<g >
<title>io_schedule (30,303,030 samples, 0.69%)</title><rect x="836.3" y="261" width="8.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="839.27" y="271.5" ></text>
</g>
<g >
<title>xas_start (10,101,010 samples, 0.23%)</title><rect x="1184.6" y="245" width="2.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1187.60" y="255.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list.part.0 (111,111,110 samples, 2.52%)</title><rect x="1130.6" y="213" width="29.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1133.59" y="223.5" >bl..</text>
</g>
<g >
<title>xas_descend (20,202,020 samples, 0.46%)</title><rect x="577.0" y="165" width="5.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="580.05" y="175.5" ></text>
</g>
<g >
<title>folio_add_lru (121,212,120 samples, 2.75%)</title><rect x="420.4" y="165" width="32.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="423.43" y="175.5" >fo..</text>
</g>
<g >
<title>ext4_da_reserve_space (70,707,070 samples, 1.60%)</title><rect x="207.1" y="181" width="18.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="210.12" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (50,505,050 samples, 1.14%)</title><rect x="433.9" y="133" width="13.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="436.94" y="143.5" ></text>
</g>
<g >
<title>try_charge_memcg (131,313,130 samples, 2.97%)</title><rect x="920.0" y="197" width="35.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="922.98" y="207.5" >tr..</text>
</g>
<g >
<title>iowrite16 (10,101,010 samples, 0.23%)</title><rect x="1154.9" y="53" width="2.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1157.90" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (60,606,060 samples, 1.37%)</title><rect x="1133.3" y="85" width="16.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1136.30" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,101,010 samples, 0.23%)</title><rect x="1125.2" y="181" width="2.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1128.19" y="191.5" ></text>
</g>
<g >
<title>xas_descend (10,101,010 samples, 0.23%)</title><rect x="1179.2" y="213" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1182.20" y="223.5" ></text>
</g>
<g >
<title>do_iter_write (2,909,090,880 samples, 65.90%)</title><rect x="18.1" y="293" width="777.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="21.10" y="303.5" >do_iter_write</text>
</g>
<g >
<title>ext4_buffered_write_iter (2,878,787,850 samples, 65.22%)</title><rect x="23.5" y="261" width="769.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="26.50" y="271.5" >ext4_buffered_write_iter</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (111,111,110 samples, 2.52%)</title><rect x="471.7" y="133" width="29.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="474.74" y="143.5" >_r..</text>
</g>
<g >
<title>__getblk_gfp (20,202,020 samples, 0.46%)</title><rect x="785.0" y="117" width="5.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="787.97" y="127.5" ></text>
</g>
<g >
<title>__filemap_get_folio (1,212,121,200 samples, 27.46%)</title><rect x="258.4" y="197" width="324.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="261.42" y="207.5" >__filemap_get_folio</text>
</g>
<g >
<title>jbd2_journal_stop (70,707,070 samples, 1.60%)</title><rect x="660.8" y="181" width="18.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="663.76" y="191.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (121,212,120 samples, 2.75%)</title><rect x="731.0" y="149" width="32.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="733.96" y="159.5" >ex..</text>
</g>
<g >
<title>run_rebalance_domains (10,101,010 samples, 0.23%)</title><rect x="1125.2" y="133" width="2.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1128.19" y="143.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (10,101,010 samples, 0.23%)</title><rect x="1187.3" y="245" width="2.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1190.30" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,414,141,370 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>submit_bio_noacct_nocheck (30,303,030 samples, 0.69%)</title><rect x="1171.1" y="229" width="8.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1174.10" y="239.5" ></text>
</g>
<g >
<title>clear_page_erms (222,222,220 samples, 5.03%)</title><rect x="1068.5" y="213" width="59.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1071.49" y="223.5" >clear_..</text>
</g>
<g >
<title>clear_page_erms (232,323,230 samples, 5.26%)</title><rect x="501.4" y="133" width="62.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="504.44" y="143.5" >clear_..</text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (30,303,030 samples, 0.69%)</title><rect x="720.2" y="133" width="8.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="723.16" y="143.5" ></text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (90,909,090 samples, 2.06%)</title><rect x="1133.3" y="149" width="24.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1136.30" y="159.5" >_..</text>
</g>
<g >
<title>__rcu_read_unlock (10,101,010 samples, 0.23%)</title><rect x="612.2" y="181" width="2.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="615.15" y="191.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (40,404,040 samples, 0.92%)</title><rect x="766.1" y="149" width="10.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="769.06" y="159.5" ></text>
</g>
<g >
<title>alloc_pages (10,101,010 samples, 0.23%)</title><rect x="1127.9" y="245" width="2.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1130.89" y="255.5" ></text>
</g>
<g >
<title>_raw_read_lock (10,101,010 samples, 0.23%)</title><rect x="695.9" y="133" width="2.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="698.86" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10,101,010 samples, 0.23%)</title><rect x="1165.7" y="197" width="2.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1168.70" y="207.5" ></text>
</g>
<g >
<title>filemap_add_folio (696,969,690 samples, 15.79%)</title><rect x="266.5" y="181" width="186.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="269.52" y="191.5" >filemap_add_folio</text>
</g>
<g >
<title>xas_start (10,101,010 samples, 0.23%)</title><rect x="830.9" y="245" width="2.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="833.87" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (10,101,010 samples, 0.23%)</title><rect x="209.8" y="149" width="2.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="212.82" y="159.5" ></text>
</g>
<g >
<title>folio_alloc (434,343,430 samples, 9.84%)</title><rect x="455.5" y="181" width="116.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="458.54" y="191.5" >folio_alloc</text>
</g>
<g >
<title>__dquot_alloc_space (30,303,030 samples, 0.69%)</title><rect x="209.8" y="165" width="8.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="212.82" y="175.5" ></text>
</g>
<g >
<title>mem_cgroup_flush_stats_delayed (10,101,010 samples, 0.23%)</title><rect x="1028.0" y="229" width="2.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1030.99" y="239.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (10,101,010 samples, 0.23%)</title><rect x="774.2" y="117" width="2.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="777.16" y="127.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (60,606,060 samples, 1.37%)</title><rect x="358.3" y="133" width="16.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="361.33" y="143.5" ></text>
</g>
<g >
<title>preempt_count_add (10,101,010 samples, 0.23%)</title><rect x="695.9" y="117" width="2.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="698.86" y="127.5" ></text>
</g>
<g >
<title>wbt_issue (10,101,010 samples, 0.23%)</title><rect x="1152.2" y="37" width="2.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1155.20" y="47.5" ></text>
</g>
<g >
<title>__rq_qos_issue (20,202,020 samples, 0.46%)</title><rect x="1149.5" y="53" width="5.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1152.50" y="63.5" ></text>
</g>
<g >
<title>xas_descend (10,101,010 samples, 0.23%)</title><rect x="417.7" y="117" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="420.73" y="127.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (30,303,030 samples, 0.69%)</title><rect x="172.0" y="133" width="8.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="175.01" y="143.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (10,101,010 samples, 0.23%)</title><rect x="774.2" y="133" width="2.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="777.16" y="143.5" ></text>
</g>
<g >
<title>__filemap_add_folio (575,757,570 samples, 13.04%)</title><rect x="855.2" y="245" width="153.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="858.17" y="255.5" >__filemap_add_folio</text>
</g>
<g >
<title>map_id_up (10,101,010 samples, 0.23%)</title><rect x="28.9" y="133" width="2.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="31.90" y="143.5" ></text>
</g>
<g >
<title>map_id_up (10,101,010 samples, 0.23%)</title><rect x="760.7" y="133" width="2.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="763.66" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (121,212,120 samples, 2.75%)</title><rect x="166.6" y="149" width="32.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="169.61" y="159.5" >km..</text>
</g>
<g >
<title>__blk_mq_run_hw_queue (101,010,100 samples, 2.29%)</title><rect x="1130.6" y="181" width="27.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1133.59" y="191.5" >_..</text>
</g>
<g >
<title>ext4_fc_track_inode (10,101,010 samples, 0.23%)</title><rect x="728.3" y="149" width="2.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="731.26" y="159.5" ></text>
</g>
<g >
<title>bvec_alloc (10,101,010 samples, 0.23%)</title><rect x="1165.7" y="213" width="2.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1168.70" y="223.5" ></text>
</g>
<g >
<title>__blk_mq_alloc_requests (10,101,010 samples, 0.23%)</title><rect x="1173.8" y="197" width="2.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1176.80" y="207.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (40,404,040 samples, 0.92%)</title><rect x="180.1" y="133" width="10.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="183.11" y="143.5" ></text>
</g>
<g >
<title>all (4,414,141,370 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>ext4_da_write_end (50,505,050 samples, 1.14%)</title><rect x="582.4" y="229" width="13.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="585.45" y="239.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (20,202,020 samples, 0.46%)</title><rect x="212.5" y="133" width="5.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="215.52" y="143.5" ></text>
</g>
<g >
<title>__alloc_pages (424,242,420 samples, 9.61%)</title><rect x="455.5" y="165" width="113.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="458.54" y="175.5" >__alloc_pages</text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.23%)</title><rect x="1009.1" y="213" width="2.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1012.08" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (60,606,060 samples, 1.37%)</title><rect x="1052.3" y="213" width="16.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1055.29" y="223.5" ></text>
</g>
<g >
<title>errseq_check (10,101,010 samples, 0.23%)</title><rect x="771.5" y="133" width="2.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="774.46" y="143.5" ></text>
</g>
<g >
<title>blk_mq_sched_try_merge (10,101,010 samples, 0.23%)</title><rect x="1176.5" y="181" width="2.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1179.50" y="191.5" ></text>
</g>
<g >
<title>__do_sys_copy_file_range (4,414,141,370 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >__do_sys_copy_file_range</text>
</g>
<g >
<title>mark_buffer_dirty (191,919,190 samples, 4.35%)</title><rect x="609.5" y="197" width="51.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="612.45" y="207.5" >mark_..</text>
</g>
<g >
<title>memset_erms (10,101,010 samples, 0.23%)</title><rect x="190.9" y="133" width="2.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="193.92" y="143.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,101,010 samples, 0.23%)</title><rect x="1125.2" y="117" width="2.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1128.19" y="127.5" ></text>
</g>
<g >
<title>balance_dirty_pages (40,404,040 samples, 0.92%)</title><rect x="45.1" y="213" width="10.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="48.10" y="223.5" ></text>
</g>
<g >
<title>atime_needs_update (10,101,010 samples, 0.23%)</title><rect x="1187.3" y="277" width="2.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1190.30" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,101,010 samples, 0.23%)</title><rect x="1025.3" y="229" width="2.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1028.29" y="239.5" ></text>
</g>
<g >
<title>filemap_add_folio (707,070,700 samples, 16.02%)</title><rect x="844.4" y="261" width="189.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="847.37" y="271.5" >filemap_add_folio</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,414,141,370 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>get_mem_cgroup_from_mm (101,010,100 samples, 2.29%)</title><rect x="955.1" y="213" width="27.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="958.08" y="223.5" >g..</text>
</g>
<g >
<title>ext4_es_can_be_merged.isra.0 (10,101,010 samples, 0.23%)</title><rect x="226.0" y="149" width="2.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="229.02" y="159.5" ></text>
</g>
<g >
<title>__find_get_block (20,202,020 samples, 0.46%)</title><rect x="785.0" y="101" width="5.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="787.97" y="111.5" ></text>
</g>
<g >
<title>preempt_count_add (10,101,010 samples, 0.23%)</title><rect x="220.6" y="149" width="2.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="223.62" y="159.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (30,303,030 samples, 0.69%)</title><rect x="836.3" y="213" width="8.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="839.27" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (20,202,020 samples, 0.46%)</title><rect x="217.9" y="165" width="5.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="220.92" y="175.5" ></text>
</g>
<g >
<title>preempt_count_add (10,101,010 samples, 0.23%)</title><rect x="199.0" y="149" width="2.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="202.02" y="159.5" ></text>
</g>
<g >
<title>generic_write_end (737,373,730 samples, 16.70%)</title><rect x="595.9" y="229" width="197.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="598.95" y="239.5" >generic_write_end</text>
</g>
<g >
<title>folio_unlock (10,101,010 samples, 0.23%)</title><rect x="790.4" y="213" width="2.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="793.37" y="223.5" ></text>
</g>
<g >
<title>__filemap_add_folio (535,353,530 samples, 12.13%)</title><rect x="277.3" y="165" width="143.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="280.32" y="175.5" >__filemap_add_folio</text>
</g>
<g >
<title>ext4_inode_csum_set (90,909,090 samples, 2.06%)</title><rect x="736.4" y="133" width="24.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="739.36" y="143.5" >e..</text>
</g>
<g >
<title>page_cache_pipe_buf_confirm (10,101,010 samples, 0.23%)</title><rect x="798.5" y="293" width="2.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="801.47" y="303.5" ></text>
</g>
<g >
<title>preempt_count_add (20,202,020 samples, 0.46%)</title><rect x="712.1" y="133" width="5.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="715.06" y="143.5" ></text>
</g>
<g >
<title>xas_load (40,404,040 samples, 0.92%)</title><rect x="571.6" y="181" width="10.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="574.65" y="191.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.23%)</title><rect x="1125.2" y="165" width="2.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1128.19" y="175.5" ></text>
</g>
<g >
<title>__bio_split_to_limits (10,101,010 samples, 0.23%)</title><rect x="1171.1" y="197" width="2.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1174.10" y="207.5" ></text>
</g>
<g >
<title>bio_associate_blkg (10,101,010 samples, 0.23%)</title><rect x="1163.0" y="213" width="2.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1166.00" y="223.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (343,434,340 samples, 7.78%)</title><rect x="698.6" y="181" width="91.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="701.56" y="191.5" >__ext4_mar..</text>
</g>
<g >
<title>get_page_from_freelist (383,838,380 samples, 8.70%)</title><rect x="466.3" y="149" width="102.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="469.34" y="159.5" >get_page_fro..</text>
</g>
<g >
<title>percpu_counter_add_batch (10,101,010 samples, 0.23%)</title><rect x="223.3" y="149" width="2.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="226.32" y="159.5" ></text>
</g>
<g >
<title>security_file_permission (10,101,010 samples, 0.23%)</title><rect x="806.6" y="309" width="2.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="809.57" y="319.5" ></text>
</g>
<g >
<title>do_splice_to (10,101,010 samples, 0.23%)</title><rect x="806.6" y="325" width="2.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="809.57" y="335.5" ></text>
</g>
<g >
<title>xas_descend (10,101,010 samples, 0.23%)</title><rect x="828.2" y="245" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="831.17" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (40,404,040 samples, 0.92%)</title><rect x="717.5" y="149" width="10.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="720.46" y="159.5" ></text>
</g>
<g >
<title>vp_notify (10,101,010 samples, 0.23%)</title><rect x="1154.9" y="69" width="2.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1157.90" y="79.5" ></text>
</g>
<g >
<title>do_splice_direct (4,414,141,370 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >do_splice_direct</text>
</g>
<g >
<title>virtblk_prep_rq.isra.0 (20,202,020 samples, 0.46%)</title><rect x="1149.5" y="85" width="5.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1152.50" y="95.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (20,202,020 samples, 0.46%)</title><rect x="682.4" y="149" width="5.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="685.36" y="159.5" ></text>
</g>
<g >
<title>touch_atime (10,101,010 samples, 0.23%)</title><rect x="1187.3" y="293" width="2.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1190.30" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,101,010 samples, 0.23%)</title><rect x="833.6" y="261" width="2.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="836.57" y="271.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (40,404,040 samples, 0.92%)</title><rect x="239.5" y="181" width="10.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="242.52" y="191.5" ></text>
</g>
<g >
<title>___slab_alloc (10,101,010 samples, 0.23%)</title><rect x="169.3" y="117" width="2.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="172.31" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10,101,010 samples, 0.23%)</title><rect x="1168.4" y="197" width="2.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1171.40" y="207.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (10,101,010 samples, 0.23%)</title><rect x="255.7" y="213" width="2.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="258.72" y="223.5" ></text>
</g>
<g >
<title>ext4_inode_csum (80,808,080 samples, 1.83%)</title><rect x="739.1" y="117" width="21.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="742.06" y="127.5" >e..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (40,404,040 samples, 0.92%)</title><rect x="45.1" y="181" width="10.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="48.10" y="191.5" ></text>
</g>
<g >
<title>_raw_write_unlock (20,202,020 samples, 0.46%)</title><rect x="234.1" y="165" width="5.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="237.12" y="175.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (80,808,080 samples, 1.83%)</title><rect x="1160.3" y="245" width="21.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1163.30" y="255.5" >e..</text>
</g>
<g >
<title>__ext4_mark_inode_dirty (10,101,010 samples, 0.23%)</title><rect x="28.9" y="181" width="2.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="31.90" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,101,010 samples, 0.23%)</title><rect x="1041.5" y="181" width="2.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1044.49" y="191.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (70,707,070 samples, 1.60%)</title><rect x="679.7" y="181" width="18.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="682.66" y="191.5" ></text>
</g>
<g >
<title>alloc_pages (10,101,010 samples, 0.23%)</title><rect x="568.9" y="165" width="2.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="571.95" y="175.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (10,101,010 samples, 0.23%)</title><rect x="28.9" y="149" width="2.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="31.90" y="159.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (50,505,050 samples, 1.14%)</title><rect x="776.9" y="149" width="13.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="779.86" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (40,404,040 samples, 0.92%)</title><rect x="668.9" y="133" width="10.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="671.86" y="143.5" ></text>
</g>
<g >
<title>generic_update_time (10,101,010 samples, 0.23%)</title><rect x="28.9" y="229" width="2.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="31.90" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (50,505,050 samples, 1.14%)</title><rect x="1011.8" y="213" width="13.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1014.78" y="223.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (10,101,010 samples, 0.23%)</title><rect x="28.9" y="213" width="2.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="31.90" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (30,303,030 samples, 0.69%)</title><rect x="709.4" y="149" width="8.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="712.36" y="159.5" ></text>
</g>
<g >
<title>dd_bio_merge (10,101,010 samples, 0.23%)</title><rect x="1176.5" y="197" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1179.50" y="207.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (10,101,010 samples, 0.23%)</title><rect x="1041.5" y="197" width="2.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1044.49" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (40,404,040 samples, 0.92%)</title><rect x="971.3" y="197" width="10.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="974.28" y="207.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (10,101,010 samples, 0.23%)</title><rect x="452.8" y="181" width="2.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="455.84" y="191.5" ></text>
</g>
<g >
<title>ext4_es_insert_delayed_block (50,505,050 samples, 1.14%)</title><rect x="226.0" y="181" width="13.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="229.02" y="191.5" ></text>
</g>
<g >
<title>mempool_alloc (10,101,010 samples, 0.23%)</title><rect x="1168.4" y="213" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1171.40" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,101,010 samples, 0.23%)</title><rect x="371.8" y="117" width="2.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="374.83" y="127.5" ></text>
</g>
<g >
<title>jbd2__journal_start (70,707,070 samples, 1.60%)</title><rect x="679.7" y="165" width="18.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="682.66" y="175.5" ></text>
</g>
<g >
<title>apparmor_file_permission (10,101,010 samples, 0.23%)</title><rect x="793.1" y="261" width="2.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="796.07" y="271.5" ></text>
</g>
<g >
<title>xas_descend (10,101,010 samples, 0.23%)</title><rect x="1181.9" y="245" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1184.90" y="255.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (10,101,010 samples, 0.23%)</title><rect x="1173.8" y="133" width="2.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1176.80" y="143.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (232,323,230 samples, 5.26%)</title><rect x="701.3" y="165" width="62.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="704.26" y="175.5" >ext4_m..</text>
</g>
<g >
<title>kmem_cache_free (10,101,010 samples, 0.23%)</title><rect x="660.8" y="165" width="2.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="663.76" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,101,010 samples, 0.23%)</title><rect x="1125.2" y="197" width="2.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1128.19" y="207.5" ></text>
</g>
<g >
<title>page_cache_pipe_buf_release (20,202,020 samples, 0.46%)</title><rect x="801.2" y="293" width="5.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="804.17" y="303.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (70,707,070 samples, 1.60%)</title><rect x="660.8" y="197" width="18.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="663.76" y="207.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (10,101,010 samples, 0.23%)</title><rect x="706.7" y="133" width="2.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="709.66" y="143.5" ></text>
</g>
<g >
<title>virtqueue_notify (10,101,010 samples, 0.23%)</title><rect x="1154.9" y="85" width="2.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1157.90" y="95.5" ></text>
</g>
<g >
<title>preempt_count_sub (10,101,010 samples, 0.23%)</title><rect x="223.3" y="133" width="2.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="226.32" y="143.5" ></text>
</g>
<g >
<title>create_empty_buffers (202,020,200 samples, 4.58%)</title><rect x="147.7" y="197" width="54.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="150.71" y="207.5" >creat..</text>
</g>
<g >
<title>copy_page_to_iter (20,202,020 samples, 0.46%)</title><rect x="814.7" y="293" width="5.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="817.67" y="303.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (10,101,010 samples, 0.23%)</title><rect x="1157.6" y="181" width="2.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1160.60" y="191.5" ></text>
</g>
<g >
<title>blk_mq_start_request (20,202,020 samples, 0.46%)</title><rect x="1149.5" y="69" width="5.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1152.50" y="79.5" ></text>
</g>
<g >
<title>cache_from_obj (10,101,010 samples, 0.23%)</title><rect x="660.8" y="149" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="663.76" y="159.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (101,010,100 samples, 2.29%)</title><rect x="1130.6" y="165" width="27.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1133.59" y="175.5" >b..</text>
</g>
<g >
<title>apparmor_file_permission (10,101,010 samples, 0.23%)</title><rect x="806.6" y="293" width="2.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="809.57" y="303.5" ></text>
</g>
<g >
<title>xas_load (10,101,010 samples, 0.23%)</title><rect x="417.7" y="133" width="2.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="420.73" y="143.5" ></text>
</g>
<g >
<title>mod_lruvec_state (10,101,010 samples, 0.23%)</title><rect x="1030.7" y="229" width="2.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1033.69" y="239.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (20,202,020 samples, 0.46%)</title><rect x="193.6" y="133" width="5.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="196.62" y="143.5" ></text>
</g>
<g >
<title>current_time (10,101,010 samples, 0.23%)</title><rect x="1187.3" y="261" width="2.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1190.30" y="271.5" ></text>
</g>
<g >
<title>generic_perform_write (2,848,484,820 samples, 64.53%)</title><rect x="31.6" y="245" width="761.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="34.60" y="255.5" >generic_perform_write</text>
</g>
<g >
<title>_raw_spin_unlock (20,202,020 samples, 0.46%)</title><rect x="212.5" y="149" width="5.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="215.52" y="159.5" ></text>
</g>
<g >
<title>up_read (20,202,020 samples, 0.46%)</title><rect x="250.3" y="181" width="5.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="253.32" y="191.5" ></text>
</g>
<g >
<title>mod_objcg_state (30,303,030 samples, 0.69%)</title><rect x="182.8" y="117" width="8.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="185.81" y="127.5" ></text>
</g>
<g >
<title>schedule (30,303,030 samples, 0.69%)</title><rect x="836.3" y="245" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="839.27" y="255.5" ></text>
</g>
<g >
<title>filemap_alloc_folio (20,202,020 samples, 0.46%)</title><rect x="1033.4" y="261" width="5.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1036.39" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (161,616,160 samples, 3.66%)</title><rect x="374.5" y="149" width="43.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="377.53" y="159.5" >_raw..</text>
</g>
<g >
<title>crc32c_pcl_intel_update (80,808,080 samples, 1.83%)</title><rect x="739.1" y="101" width="21.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="742.06" y="111.5" >c..</text>
</g>
<g >
<title>start_this_handle (40,404,040 samples, 0.92%)</title><rect x="687.8" y="149" width="10.8" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="690.76" y="159.5" ></text>
</g>
<g >
<title>xa_get_order (10,101,010 samples, 0.23%)</title><rect x="417.7" y="149" width="2.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="420.73" y="159.5" ></text>
</g>
<g >
<title>folio_add_lru (50,505,050 samples, 1.14%)</title><rect x="1011.8" y="245" width="13.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1014.78" y="255.5" ></text>
</g>
<g >
<title>kfree (10,101,010 samples, 0.23%)</title><rect x="795.8" y="293" width="2.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="798.77" y="303.5" ></text>
</g>
<g >
<title>security_file_permission (10,101,010 samples, 0.23%)</title><rect x="793.1" y="277" width="2.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="796.07" y="287.5" ></text>
</g>
<g >
<title>generic_file_splice_read (1,424,242,410 samples, 32.27%)</title><rect x="809.3" y="325" width="380.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="812.27" y="335.5" >generic_file_splice_read</text>
</g>
<g >
<title>__softirqentry_text_start (10,101,010 samples, 0.23%)</title><rect x="1009.1" y="197" width="2.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1012.08" y="207.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (50,505,050 samples, 1.14%)</title><rect x="1011.8" y="229" width="13.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1014.78" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (10,101,010 samples, 0.23%)</title><rect x="15.4" y="277" width="2.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="18.40" y="287.5" ></text>
</g>
<g >
<title>alloc_buffer_head (141,414,140 samples, 3.20%)</title><rect x="163.9" y="165" width="37.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="166.91" y="175.5" >all..</text>
</g>
<g >
<title>__es_insert_extent (10,101,010 samples, 0.23%)</title><rect x="226.0" y="165" width="2.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="229.02" y="175.5" ></text>
</g>
<g >
<title>blk_mq_submit_bio (30,303,030 samples, 0.69%)</title><rect x="1171.1" y="213" width="8.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1174.10" y="223.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (272,727,270 samples, 6.18%)</title><rect x="909.2" y="229" width="72.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="912.18" y="239.5" >__mem_cg..</text>
</g>
<g >
<title>charge_memcg (141,414,140 samples, 3.20%)</title><rect x="320.5" y="133" width="37.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="323.53" y="143.5" >cha..</text>
</g>
<g >
<title>bio_alloc_bioset (30,303,030 samples, 0.69%)</title><rect x="1163.0" y="229" width="8.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1166.00" y="239.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (10,101,010 samples, 0.23%)</title><rect x="706.7" y="149" width="2.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="709.66" y="159.5" ></text>
</g>
<g >
<title>xas_nomem (10,101,010 samples, 0.23%)</title><rect x="1006.4" y="229" width="2.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1009.38" y="239.5" ></text>
</g>
<g >
<title>xas_load (20,202,020 samples, 0.46%)</title><rect x="828.2" y="261" width="5.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="831.17" y="271.5" ></text>
</g>
<g >
<title>try_charge_memcg (80,808,080 samples, 1.83%)</title><rect x="336.7" y="117" width="21.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="339.73" y="127.5" >t..</text>
</g>
<g >
<title>read_pages (191,919,190 samples, 4.35%)</title><rect x="1130.6" y="261" width="51.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1133.59" y="271.5" >read_..</text>
</g>
<g >
<title>do_iter_readv_writev (2,878,787,850 samples, 65.22%)</title><rect x="23.5" y="277" width="769.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="26.50" y="287.5" >do_iter_readv_writev</text>
</g>
<g >
<title>common_interrupt (10,101,010 samples, 0.23%)</title><rect x="1009.1" y="229" width="2.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1012.08" y="239.5" ></text>
</g>
<g >
<title>xa_load (10,101,010 samples, 0.23%)</title><rect x="1179.2" y="229" width="2.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1182.20" y="239.5" ></text>
</g>
<g >
<title>dd_has_work (10,101,010 samples, 0.23%)</title><rect x="1157.6" y="165" width="2.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1160.60" y="175.5" ></text>
</g>
<g >
<title>node_dirty_ok (20,202,020 samples, 0.46%)</title><rect x="563.5" y="133" width="5.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="566.55" y="143.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (484,848,480 samples, 10.98%)</title><rect x="660.8" y="213" width="129.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="663.76" y="223.5" >__mark_inode_dirty</text>
</g>
<g >
<title>cp (4,414,141,370 samples, 100.00%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >cp</text>
</g>
<g >
<title>splice_direct_to_actor (4,414,141,370 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >splice_direct_to_actor</text>
</g>
<g >
<title>bvec_split_segs (10,101,010 samples, 0.23%)</title><rect x="1171.1" y="181" width="2.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1174.10" y="191.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (10,101,010 samples, 0.23%)</title><rect x="1125.2" y="149" width="2.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1128.19" y="159.5" ></text>
</g>
<g >
<title>mem_cgroup_wb_stats (40,404,040 samples, 0.92%)</title><rect x="45.1" y="197" width="10.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="48.10" y="207.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (30,303,030 samples, 0.69%)</title><rect x="139.6" y="181" width="8.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="142.61" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (313,131,310 samples, 7.09%)</title><rect x="1044.2" y="229" width="83.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1047.19" y="239.5" >get_page_..</text>
</g>
<g >
<title>ext4_block_write_begin (484,848,480 samples, 10.98%)</title><rect x="126.1" y="213" width="129.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="129.11" y="223.5" >ext4_block_write..</text>
</g>
<g >
<title>blk_mq_sched_insert_requests (111,111,110 samples, 2.52%)</title><rect x="1130.6" y="197" width="29.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1133.59" y="207.5" >bl..</text>
</g>
<g >
<title>filemap_get_read_batch (50,505,050 samples, 1.14%)</title><rect x="820.1" y="277" width="13.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="823.07" y="287.5" ></text>
</g>
<g >
<title>folio_wait_bit_common (40,404,040 samples, 0.92%)</title><rect x="833.6" y="277" width="10.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="836.57" y="287.5" ></text>
</g>
<g >
<title>vfs_copy_file_range (4,414,141,370 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >vfs_copy_file_range</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited_flags (90,909,090 samples, 2.06%)</title><rect x="34.3" y="229" width="24.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="37.30" y="239.5" >b..</text>
</g>
<g >
<title>__slab_alloc.constprop.0 (10,101,010 samples, 0.23%)</title><rect x="169.3" y="133" width="2.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="172.31" y="143.5" ></text>
</g>
<g >
<title>_raw_read_lock (10,101,010 samples, 0.23%)</title><rect x="244.9" y="165" width="2.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="247.92" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (30,303,030 samples, 0.69%)</title><rect x="139.6" y="197" width="8.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="142.61" y="207.5" ></text>
</g>
<g >
<title>elv_merge (10,101,010 samples, 0.23%)</title><rect x="1176.5" y="165" width="2.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1179.50" y="175.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (101,010,100 samples, 2.29%)</title><rect x="763.4" y="165" width="27.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="766.36" y="175.5" >e..</text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (222,222,220 samples, 5.03%)</title><rect x="601.4" y="213" width="59.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="604.35" y="223.5" >__bloc..</text>
</g>
<g >
<title>iter_file_splice_write (2,969,696,940 samples, 67.28%)</title><rect x="12.7" y="309" width="793.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="15.70" y="319.5" >iter_file_splice_write</text>
</g>
<g >
<title>sbitmap_get (10,101,010 samples, 0.23%)</title><rect x="1173.8" y="165" width="2.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1176.80" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (131,313,130 samples, 2.97%)</title><rect x="614.9" y="181" width="35.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="617.85" y="191.5" >_r..</text>
</g>
<g >
<title>lock_page_memcg (10,101,010 samples, 0.23%)</title><rect x="658.1" y="181" width="2.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="661.05" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,101,010 samples, 0.23%)</title><rect x="968.6" y="197" width="2.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="971.58" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,101,010 samples, 0.23%)</title><rect x="169.3" y="85" width="2.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="172.31" y="95.5" ></text>
</g>
<g >
<title>blk_mq_do_dispatch_sched (90,909,090 samples, 2.06%)</title><rect x="1133.3" y="133" width="24.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1136.30" y="143.5" >b..</text>
</g>
<g >
<title>ext4_da_get_block_prep (202,020,200 samples, 4.58%)</title><rect x="201.7" y="197" width="54.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="204.72" y="207.5" >ext4_..</text>
</g>
<g >
<title>preempt_count_add (10,101,010 samples, 0.23%)</title><rect x="55.9" y="213" width="2.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="58.90" y="223.5" ></text>
</g>
<g >
<title>__kmalloc (10,101,010 samples, 0.23%)</title><rect x="15.4" y="293" width="2.7" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="18.40" y="303.5" ></text>
</g>
<g >
<title>__sbitmap_get_word (10,101,010 samples, 0.23%)</title><rect x="1173.8" y="149" width="2.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1176.80" y="159.5" ></text>
</g>
</g>
</svg>
